// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

type AddExerciseInput struct {
	Name      string  `json:"name"`
	Sets      int     `json:"sets"`
	Reps      int     `json:"reps"`
	Weight    float64 `json:"weight"`
	WorkoutID string  `json:"workoutId"`
}

type AddExerciseSetInput struct {
	SessionExerciseID string  `json:"sessionExerciseId"`
	Reps              int     `json:"reps"`
	Weight            float64 `json:"weight"`
	Notes             *string `json:"notes,omitempty"`
}

type AddSessionExerciseInput struct {
	SessionID  string `json:"sessionId"`
	ExerciseID string `json:"exerciseId"`
}

type CreateWorkoutInput struct {
	Name string `json:"name"`
}

type Exercise struct {
	ID        string  `json:"id"`
	Name      string  `json:"name"`
	Sets      int     `json:"sets"`
	Reps      int     `json:"reps"`
	Weight    float64 `json:"weight"`
	WorkoutID string  `json:"workoutId"`
	CreatedAt string  `json:"createdAt"`
	UpdatedAt string  `json:"updatedAt"`
}

type ExerciseSet struct {
	ID                string  `json:"id"`
	SessionExerciseID string  `json:"sessionExerciseId"`
	Reps              int     `json:"reps"`
	Weight            float64 `json:"weight"`
	Completed         bool    `json:"completed"`
	Notes             *string `json:"notes,omitempty"`
	CreatedAt         string  `json:"createdAt"`
	UpdatedAt         string  `json:"updatedAt"`
}

type Mutation struct {
}

type Query struct {
}

type SessionExercise struct {
	ID         string         `json:"id"`
	SessionID  string         `json:"sessionId"`
	ExerciseID string         `json:"exerciseId"`
	Exercise   *Exercise      `json:"exercise"`
	Sets       []*ExerciseSet `json:"sets"`
	CreatedAt  string         `json:"createdAt"`
	UpdatedAt  string         `json:"updatedAt"`
}

type UpdateExerciseInput struct {
	Name   *string  `json:"name,omitempty"`
	Sets   *int     `json:"sets,omitempty"`
	Reps   *int     `json:"reps,omitempty"`
	Weight *float64 `json:"weight,omitempty"`
}

type UpdateExerciseSetInput struct {
	Reps      *int     `json:"reps,omitempty"`
	Weight    *float64 `json:"weight,omitempty"`
	Completed *bool    `json:"completed,omitempty"`
	Notes     *string  `json:"notes,omitempty"`
}

type UpdateSessionExerciseInput struct {
	ExerciseID *string `json:"exerciseId,omitempty"`
}

type UpdateWorkoutInput struct {
	Name *string `json:"name,omitempty"`
}

type Workout struct {
	ID        string      `json:"id"`
	Name      string      `json:"name"`
	Exercises []*Exercise `json:"exercises"`
	CreatedAt string      `json:"createdAt"`
	UpdatedAt string      `json:"updatedAt"`
}

type WorkoutSession struct {
	ID        string             `json:"id"`
	WorkoutID string             `json:"workoutId"`
	Workout   *Workout           `json:"workout"`
	StartedAt string             `json:"startedAt"`
	EndedAt   *string            `json:"endedAt,omitempty"`
	IsActive  bool               `json:"isActive"`
	Exercises []*SessionExercise `json:"exercises"`
	CreatedAt string             `json:"createdAt"`
	UpdatedAt string             `json:"updatedAt"`
}
